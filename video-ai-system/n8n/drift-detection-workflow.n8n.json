{
  "name": "Scheduled Drift Detection",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "rule": "daily",
        "time": "01:00"
      },
      "name": "Daily Cron Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [440, 300]
    },
    {
      "parameters": {
        "functionCode": "// Get current date\nconst now = new Date();\n\n// Comparison window: last 24 hours\nconst comp_end = new Date(now);\nconst comp_start = new Date(now);\ncomp_start.setDate(comp_start.getDate() - 1);\n\n// Reference window: the 24 hours before that\nconst ref_end = new Date(comp_start);\nconst ref_start = new Date(comp_start);\nref_start.setDate(ref_start.getDate() - 1);\n\n// Format for API\nitem.reference_window = {\n  start_time: ref_start.toISOString(),\n  end_time: ref_end.toISOString(),\n};\nitem.comparison_window = {\n  start_time: comp_start.toISOString(),\n  end_time: comp_end.toISOString(),\n};\n\nreturn item;"
      },
      "name": "Set Time Windows",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [660, 300]
    },
    {
      "parameters": {
        "url": "http://fastapi:8000/drift-detection/check",
        "options": {},
        "bodyParametersJson": "{\n  \"reference_window\": {\n    \"start_time\": \"{{$json.reference_window.start_time}}\",\n    \"end_time\": \"{{$json.reference_window.end_time}}\"\n  },\n  \"comparison_window\": {\n    \"start_time\": \"{{$json.comparison_window.start_time}}\",\n    \"end_time\": \"{{$json.comparison_window.end_time}}\"\n  }\n}",
        "json": true
      },
      "name": "Call Drift Detection API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [880, 300]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$node[\"Call Drift Detection API\"].json.drift_detected}}",
              "value2": true
            }
          ]
        }
      },
      "name": "Is drift_detected true?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1100, 300]
    },
    {
      "parameters": {},
      "name": "Placeholder: Trigger Retraining",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [1320, 200]
    },
    {
      "parameters": {},
      "name": "NoOp: No Drift",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [1320, 400]
    }
  ],
  "connections": {
    "Daily Cron Trigger": {
      "main": [
        [
          {
            "node": "Set Time Windows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Time Windows": {
      "main": [
        [
          {
            "node": "Call Drift Detection API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Drift Detection API": {
      "main": [
        [
          {
            "node": "Is drift_detected true?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is drift_detected true?": {
      "main": [
        [
          {
            "node": "Placeholder: Trigger Retraining",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp: No Drift",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "id": "3"
}
