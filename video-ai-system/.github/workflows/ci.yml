name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  security-scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./video-ai-system
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy
      - name: Scan for vulnerabilities
        run: trivy fs --severity CRITICAL --exit-code 1 requirements.txt

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./video-ai-system
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Run linter
        run: ruff check src/

  test:
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: ./video-ai-system
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: pytest

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./video-ai-system
          file: ./video-ai-system/Dockerfile
          push: false
          tags: video-ai-system:latest

  optimize-model:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    defaults:
      run:
        working-directory: ./video-ai-system
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r scripts/requirements.txt
      - name: Create dummy model for testing
        run: |
          mkdir -p models
          echo "dummy onnx model" > models/model.onnx
      - name: Run optimization script
        run: |
          python scripts/optimize_model.py --input-model-path models/model.onnx --output-model-path models/optimized_model.onnx
      - name: Benchmark optimized model
        run: |
          python scripts/benchmark_model.py --model-path models/optimized_model.onnx > benchmark_results.json
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: optimization-artifacts
          path: |
            models/optimized_model.onnx
            benchmark_results.json
